import os 

def convertFileToHexString(fileName):
	returnString = ""
	n = 0
	with open(fileName, "rb") as f:
		b = f.read(1)
		while b != b'':
			returnString += "0x"
			returnString += b.hex()
			returnString += ","
			n += 1
			b = f.read(1)
	
	returnString = returnString[:-1]
	return returnString

def outputStringToFile(fileName, str):
	with open(fileName, "w") as f:
		f.write(str)
		

if os.system("win2c64.exe -R 6502avr.s") != 0:
	print("Compilation failed, programcode.asm not overwritten!") 
ramCode = convertFileToHexString("6502avr.rwa")
romCode = convertFileToHexString("6502avr.rwb")
eepromCode = convertFileToHexString("6502avr.rwc")

fileOutput = ("/* This file was generated by generate_AVR_asm.py in the Assembler folder in the project root. \n"
			  "   If you wish to change the assembly code defined in here, modify the 6502avr.s file and run  \n"
			  "   the python3.5 script. It will automatically override this file if compilation is successful.*/\n"
			  "\n"
			  "\n"
			  ".EQU RAM_SIZE = 1024"
			  "\n"
			  "\n"
			  ".CSEG\n"
			  "RAMcodeUNLOADED:\n"
			  ".DB " + ramCode + "\n"
			  "\n"
			  "ROMcode:\n"
			  ".DB " + romCode + "\n"
			  "\n"
			  ".DSEG\n"
			  "RAMcode: .BYTE RAM_SIZE\n"
			  "\n"
			  ".ESEG\n"
			  "EEPROMcode:\n"
			  ".DB " + eepromCode + "\n"
			  "\n"
			  ".CSEG\n"
			  )
			 
#print(fileOutput)
outputStringToFile("../6502EMU/programcode.asm", fileOutput)
print("programcode.asm written!")